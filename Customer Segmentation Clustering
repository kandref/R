#read csv
pelanggan <- read.csv("https://storage.googleapis.com/dqlab-dataset/customer_segments.txt", sep="\t")
pelanggan[c("Jenis.Kelamin","Umur","Profesi","Tipe.Residen")]

#Buat vektor baru
field_latihan <- c("Jenis.Kelamin","Umur","Profesi")

#Menampilkan vektor field_latihan
pelanggan[field_latihan]

#konversi data menjadi numerik
pelanggan_matrix <- data.matrix(pelanggan[c("Jenis.Kelamin","Tipe.Residen","Profesi")])

#penggabungan data
pelanggan <- data.frame(pelanggan,pelanggan_matrix)
pelanggan

#normalisasi nilai
#penjelasan : a agar perhitungan lebih sederhana dan mudah dicerna, namun tidak mengurangi akurasi. Ini terutama akan sangat bermanfaat jika jumlah data sangat banyak, misalkan memiliki 200 ribu data.
pelanggan$NilaiBelanjaSetahun <- pelanggan$NilaiBelanjaSetahun/1000000

#mengisi data master
Profesi <- unique(pelanggan[c("Profesi","Profesi.1")])
Jenis.Kelamin <- unique(pelanggan[c("Jenis.Kelamin","Jenis.Kelamin.1")])
Tipe.Residen <- unique(pelanggan[c("Tipe.Residen","Tipe.Residen.1")])

field_yang_digunakan = c("Jenis.Kelamin.1", "Umur", "Profesi.1", "Tipe.Residen.1","NilaiBelanjaSetahun")

#bagian K-Means
set.seed(1)

#K-Means untuk membentuk 5 cluster dengan 25 skenario random, simpan ke variable "Segmentasi"
segmentasi <- kmeans(x=pelanggan[field_yang_digunakan], centers=5,nstart=25)
segmentasi

#penggabungan hasil cluster
segmentasi$cluster
pelanggan$cluster <- segmentasi$cluster

str(pelanggan)

#analisa hasil
#filter cluster : verifikasi jumlah cluster 1 = 14 orang
which(pelanggan$cluster == 1)

#mgnhitung pelanggan cluster 2,3,4,5
length(which(pelanggan$cluster == 2))
pelanggan[which(pelanggan$cluster == 3),]
pelanggan[which(pelanggan$cluster == 4),]
pelanggan[which(pelanggan$cluster == 5),]

#hasil cluster means dari objek
segmentasi$centers

#Membandingkan dengan 2 cluster kmeans, masing-masing 2 dan 5
set.seed(1)
kmeans(x=pelanggan[field_yang_digunakan], centers=2, nstart=25)
set.seed(1)
kmeans(x=pelanggan[field_yang_digunakan], centers=5, nstart=25)

#Bagian K-Means
set.seed(1)
segmentasi <- kmeans(x=pelanggan[field_yang_digunakan], centers=5, nstart=25)
segmentasi$withinss
segmentasi$cluster
segmentasi$tot.withinss

#Sum of Square
set.seed(1)
sse <- sapply(1:10,
              function(param_k)
              {
                kmeans(pelanggan[field_yang_digunakan], param_k, nstart=25)$tot.withinss
              }
)
sse

#plot chart dalam ggplot2
install.packages("ggplot2")
library("ggplot2")
jumlah_cluster_max <- 10
ssdata = data.frame(cluster=c(1:jumlah_cluster_max),sse)
ggplot(ssdata, aes(x=cluster,y=sse)) + 
  geom_line(color="red") + geom_point() + 
  ylab("Within Cluster Sum of Squares") + xlab("Jumlah Cluster") +
  geom_text(aes(label=format(round(sse, 2), nsmall = 2)),hjust=-0.2, vjust=-0.5) +
  scale_x_discrete(limits=c(1:jumlah_cluster_max))

#Lengkapi dengan dua vector bernama cluster dan Nama.Segmen

Segmen.Pelanggan <- data.frame(cluster=c(1,2,3,4,5), Nama.Segmen=c("Silver Youth Gals", "Diamond Senior Member", "Gold Young Professional", "Diamond Professional", "Silver Mid Professional"))

#Menggabungkan seluruh aset ke dalam variable Identitas.Cluster
Identitas.Cluster <- list(Profesi=Profesi, Jenis.Kelamin=Jenis.Kelamin, Tipe.Residen=Tipe.Residen, Segmentasi=segmentasi, Segmen.Pelanggan=Segmen.Pelanggan, field_yang_digunakan=field_yang_digunakan)
saveRDS(Identitas.Cluster,"cluster.rds")

#Load objek clustering dari file
Identitas.Cluster <- readRDS(file="cluster.rds")
Identitas.Cluster
